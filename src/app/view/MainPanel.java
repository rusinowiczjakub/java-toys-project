package app.view;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 * The type Main panel.
 */
public class MainPanel {
    private JPanel categories;
    private JPanel toys;
    private JPanel fileExport;
    private JPanel fileImport;
    private JPanel close;
    private JPanel about;
    private JPanel mainPane;

    /**
     * Instantiates a new Main panel.
     */
    public MainPanel() {
        categories.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        toys.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        fileExport.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        fileImport.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        close.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        about.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }

    public JPanel getCategories() {
        return categories;
    }

    public JPanel getToys() {
        return toys;
    }

    public JPanel getFileExport() {
        return fileExport;
    }

    public JPanel getFileImport() {
        return fileImport;
    }

    public JPanel getClose() {
        return close;
    }

    public JPanel getAbout() {
        return about;
    }

    public JPanel getMainPane() {
        return mainPane;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPane = new JPanel();
        mainPane.setLayout(new GridBagLayout());
        mainPane.setBackground(new Color(-1));
        mainPane.setBorder(BorderFactory.createTitledBorder(""));
        categories = new JPanel();
        categories.setLayout(new GridBagLayout());
        categories.setBackground(new Color(-1));
        categories.setPreferredSize(new Dimension(130, 130));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.BOTH;
        mainPane.add(categories, gbc);
        final JLabel label1 = new JLabel();
        label1.setBackground(new Color(-1));
        label1.setIcon(new ImageIcon(getClass().getResource("/app/images/four-black-squares.png")));
        label1.setOpaque(false);
        label1.setPreferredSize(new Dimension(130, 130));
        label1.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        categories.add(label1, gbc);
        final JToolBar.Separator toolBar$Separator1 = new JToolBar.Separator();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 40, 0, 40);
        mainPane.add(toolBar$Separator1, gbc);
        toys = new JPanel();
        toys.setLayout(new GridBagLayout());
        toys.setBackground(new Color(-1));
        toys.setPreferredSize(new Dimension(130, 130));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.BOTH;
        mainPane.add(toys, gbc);
        final JLabel label2 = new JLabel();
        label2.setBackground(new Color(-1));
        label2.setIcon(new ImageIcon(getClass().getResource("/app/images/puzzle.png")));
        label2.setOpaque(false);
        label2.setPreferredSize(new Dimension(130, 130));
        label2.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        toys.add(label2, gbc);
        final JToolBar.Separator toolBar$Separator2 = new JToolBar.Separator();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 40, 0, 40);
        mainPane.add(toolBar$Separator2, gbc);
        fileExport = new JPanel();
        fileExport.setLayout(new GridBagLayout());
        fileExport.setBackground(new Color(-1));
        fileExport.setPreferredSize(new Dimension(130, 130));
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.BOTH;
        mainPane.add(fileExport, gbc);
        final JLabel label3 = new JLabel();
        label3.setBackground(new Color(-1));
        label3.setIcon(new ImageIcon(getClass().getResource("/app/images/export.png")));
        label3.setOpaque(false);
        label3.setPreferredSize(new Dimension(130, 130));
        label3.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        fileExport.add(label3, gbc);
        final JToolBar.Separator toolBar$Separator3 = new JToolBar.Separator();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.VERTICAL;
        gbc.insets = new Insets(20, 0, 20, 0);
        mainPane.add(toolBar$Separator3, gbc);
        close = new JPanel();
        close.setLayout(new GridBagLayout());
        close.setBackground(new Color(-1));
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.BOTH;
        mainPane.add(close, gbc);
        final JLabel label4 = new JLabel();
        label4.setIcon(new ImageIcon(getClass().getResource("/app/images/sign-out-option.png")));
        label4.setOpaque(false);
        label4.setPreferredSize(new Dimension(130, 130));
        label4.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        close.add(label4, gbc);
        fileImport = new JPanel();
        fileImport.setLayout(new GridBagLayout());
        fileImport.setBackground(new Color(-1));
        fileImport.setPreferredSize(new Dimension(130, 130));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.BOTH;
        mainPane.add(fileImport, gbc);
        final JLabel label5 = new JLabel();
        label5.setIcon(new ImageIcon(getClass().getResource("/app/images/import.png")));
        label5.setOpaque(false);
        label5.setPreferredSize(new Dimension(130, 130));
        label5.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        fileImport.add(label5, gbc);
        about = new JPanel();
        about.setLayout(new GridBagLayout());
        about.setBackground(new Color(-1));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.BOTH;
        mainPane.add(about, gbc);
        final JLabel label6 = new JLabel();
        label6.setIcon(new ImageIcon(getClass().getResource("/app/images/icon.png")));
        label6.setOpaque(false);
        label6.setPreferredSize(new Dimension(130, 130));
        label6.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        about.add(label6, gbc);
        final JToolBar.Separator toolBar$Separator4 = new JToolBar.Separator();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 40, 0, 40);
        mainPane.add(toolBar$Separator4, gbc);
        final JSeparator separator1 = new JSeparator();
        separator1.setBackground(new Color(-1));
        separator1.setForeground(new Color(-1));
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 40, 0, 40);
        mainPane.add(separator1, gbc);
        final JToolBar.Separator toolBar$Separator5 = new JToolBar.Separator();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.VERTICAL;
        gbc.insets = new Insets(20, 0, 20, 0);
        mainPane.add(toolBar$Separator5, gbc);
        final JToolBar.Separator toolBar$Separator6 = new JToolBar.Separator();
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.VERTICAL;
        gbc.insets = new Insets(20, 0, 20, 0);
        mainPane.add(toolBar$Separator6, gbc);
        final JToolBar.Separator toolBar$Separator7 = new JToolBar.Separator();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        mainPane.add(toolBar$Separator7, gbc);
        final JToolBar.Separator toolBar$Separator8 = new JToolBar.Separator();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.VERTICAL;
        mainPane.add(toolBar$Separator8, gbc);
        final JToolBar.Separator toolBar$Separator9 = new JToolBar.Separator();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        mainPane.add(toolBar$Separator9, gbc);
        final JToolBar.Separator toolBar$Separator10 = new JToolBar.Separator();
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        mainPane.add(toolBar$Separator10, gbc);
        final JToolBar.Separator toolBar$Separator11 = new JToolBar.Separator();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.VERTICAL;
        mainPane.add(toolBar$Separator11, gbc);
        final JToolBar.Separator toolBar$Separator12 = new JToolBar.Separator();
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.VERTICAL;
        mainPane.add(toolBar$Separator12, gbc);
        final JLabel label7 = new JLabel();
        Font label7Font = this.$$$getFont$$$("SansSerif", Font.BOLD, 22, label7.getFont());
        if (label7Font != null) label7.setFont(label7Font);
        label7.setForeground(new Color(-15092226));
        label7.setPreferredSize(new Dimension(130, 20));
        label7.setText("Import");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        mainPane.add(label7, gbc);
        final JLabel label8 = new JLabel();
        Font label8Font = this.$$$getFont$$$("SansSerif", Font.BOLD, 22, label8.getFont());
        if (label8Font != null) label8.setFont(label8Font);
        label8.setForeground(new Color(-15092226));
        label8.setPreferredSize(new Dimension(130, 20));
        label8.setText("Info");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 4;
        mainPane.add(label8, gbc);
        final JLabel label9 = new JLabel();
        Font label9Font = this.$$$getFont$$$("SansSerif", Font.BOLD, 22, label9.getFont());
        if (label9Font != null) label9.setFont(label9Font);
        label9.setForeground(new Color(-15092226));
        label9.setPreferredSize(new Dimension(130, 20));
        label9.setText("Wyjście");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 4;
        mainPane.add(label9, gbc);
        final JLabel label10 = new JLabel();
        Font label10Font = this.$$$getFont$$$("SansSerif", Font.BOLD, 22, label10.getFont());
        if (label10Font != null) label10.setFont(label10Font);
        label10.setForeground(new Color(-15092226));
        label10.setPreferredSize(new Dimension(130, 20));
        label10.setText("Kategorie");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        mainPane.add(label10, gbc);
        final JLabel label11 = new JLabel();
        Font label11Font = this.$$$getFont$$$("SansSerif", Font.BOLD, 22, label11.getFont());
        if (label11Font != null) label11.setFont(label11Font);
        label11.setForeground(new Color(-15092226));
        label11.setPreferredSize(new Dimension(130, 20));
        label11.setText("Zabawki");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        mainPane.add(label11, gbc);
        final JLabel label12 = new JLabel();
        Font label12Font = this.$$$getFont$$$("SansSerif", Font.BOLD, 22, label12.getFont());
        if (label12Font != null) label12.setFont(label12Font);
        label12.setForeground(new Color(-15092226));
        label12.setPreferredSize(new Dimension(130, 20));
        label12.setText("Eksport");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 0;
        mainPane.add(label12, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPane;
    }
}
