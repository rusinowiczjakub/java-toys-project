package app.view;

import javax.swing.*;
import java.awt.*;

public class CreateToy {
    private JTextArea name;
    private JSpinner weight;
    private JSpinner minAge;
    private JSpinner price;
    private JButton saveBtn;
    private JTextArea producer;
    private JPanel createToyPanel;

    public CreateToy() {
        SpinnerNumberModel spinnerWeightModel = new SpinnerNumberModel(0.00, -999999999, 999999999.00, 0.1);
        SpinnerNumberModel spinnerPriceModel = new SpinnerNumberModel(0.00, -999999999, 999999999.00, 0.1);
        weight.setModel(spinnerWeightModel);
        price.setModel(spinnerPriceModel);

        JSpinner.NumberEditor weightEditor = new JSpinner.NumberEditor(weight);
        JSpinner.NumberEditor priceEditor = new JSpinner.NumberEditor(price);

        weight.setEditor(weightEditor);
        price.setEditor(priceEditor);
    }

    public JTextArea getName() {
        return name;
    }

    public JSpinner getWeight() {
        return weight;
    }

    public JSpinner getMinAge() {
        return minAge;
    }

    public JSpinner getPrice() {
        return price;
    }

    public JButton getSaveBtn() {
        return saveBtn;
    }

    public JTextArea getProducer() {
        return producer;
    }

    public JPanel getCreateToyPanel() {
        return createToyPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createToyPanel = new JPanel();
        createToyPanel.setLayout(new GridBagLayout());
        producer = new JTextArea();
        producer.setPreferredSize(new Dimension(200, 30));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        createToyPanel.add(producer, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.VERTICAL;
        createToyPanel.add(spacer1, gbc);
        name = new JTextArea();
        name.setPreferredSize(new Dimension(200, 30));
        name.setRequestFocusEnabled(true);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.BOTH;
        createToyPanel.add(name, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.VERTICAL;
        createToyPanel.add(spacer2, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 8;
        gbc.fill = GridBagConstraints.VERTICAL;
        createToyPanel.add(spacer3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 11;
        gbc.fill = GridBagConstraints.VERTICAL;
        createToyPanel.add(spacer4, gbc);
        weight = new JSpinner();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        createToyPanel.add(weight, gbc);
        minAge = new JSpinner();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 10;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        createToyPanel.add(minAge, gbc);
        price = new JSpinner();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 13;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        createToyPanel.add(price, gbc);
        saveBtn = new JButton();
        saveBtn.setBackground(new Color(-855297));
        saveBtn.setText("Zapisz");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 15;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        createToyPanel.add(saveBtn, gbc);
        final JPanel spacer5 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 14;
        gbc.fill = GridBagConstraints.VERTICAL;
        gbc.insets = new Insets(10, 0, 5, 0);
        createToyPanel.add(spacer5, gbc);
        final JLabel label1 = new JLabel();
        label1.setText("Producent");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        createToyPanel.add(label1, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Nazwa");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        createToyPanel.add(label2, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Waga");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.anchor = GridBagConstraints.WEST;
        createToyPanel.add(label3, gbc);
        final JLabel label4 = new JLabel();
        label4.setText("Minimalny wiek");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 9;
        gbc.anchor = GridBagConstraints.WEST;
        createToyPanel.add(label4, gbc);
        final JLabel label5 = new JLabel();
        label5.setText("Cena");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 12;
        gbc.anchor = GridBagConstraints.WEST;
        createToyPanel.add(label5, gbc);
        label1.setLabelFor(producer);
        label2.setLabelFor(name);
        label3.setLabelFor(weight);
        label4.setLabelFor(minAge);
        label5.setLabelFor(price);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return createToyPanel;
    }
}
